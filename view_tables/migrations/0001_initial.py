# Generated by Django 4.2.4 on 2023-09-17 21:59

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProductLine',
            fields=[
                ('productLines', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('textDescription', models.TextField()),
            ],
            options={
                'db_table': 'productlines',
                'unique_together': {('productLines', 'textDescription')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('productCode', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('productName', models.CharField(max_length=70)),
                ('productLine', models.CharField(max_length=50)),
                ('productScale', models.CharField(max_length=10)),
                ('productVendor', models.CharField(max_length=50)),
                ('productDescription', models.TextField()),
                ('quantityInStock', models.IntegerField()),
                ('buyPrice', models.FloatField()),
                ('MSRP', models.FloatField()),
            ],
            options={
                'db_table': 'products',
                'unique_together': {('productCode', 'productName')},
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customerNumber', models.IntegerField()),
                ('checkNumber', models.CharField(max_length=50)),
                ('paymentDate', models.DateTimeField()),
                ('amount', models.FloatField()),
            ],
            options={
                'db_table': 'payments',
                'unique_together': {('customerNumber', 'checkNumber')},
            },
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orderNumber', models.IntegerField()),
                ('productCode', models.CharField(max_length=15)),
                ('quantityOrdered', models.IntegerField()),
                ('priceEach', models.FloatField()),
                ('orderLineNumber', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'orderdetails',
                'unique_together': {('orderNumber', 'productCode')},
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('orderNumber', models.IntegerField(primary_key=True, serialize=False)),
                ('orderDate', models.DateTimeField()),
                ('requiredDate', models.DateTimeField()),
                ('shippedDate', models.DateTimeField()),
                ('status', models.CharField(max_length=255)),
                ('comments', models.TextField(blank=True, null=True)),
                ('customerNumber', models.IntegerField()),
            ],
            options={
                'db_table': 'orders',
                'unique_together': {('orderNumber', 'orderDate')},
            },
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('officeCode', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('city', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=50)),
                ('addressLine1', models.CharField(max_length=50)),
                ('addressLine2', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(max_length=50)),
                ('postalCode', models.CharField(max_length=50)),
                ('territory', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'offices',
                'unique_together': {('officeCode', 'city')},
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('employeeNumber', models.IntegerField(primary_key=True, serialize=False)),
                ('lastName', models.CharField(max_length=50)),
                ('firstName', models.CharField(max_length=50)),
                ('extension', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=100)),
                ('officeCode', models.CharField(max_length=10)),
                ('reportsTo', models.IntegerField(blank=True, null=True)),
                ('jobTitle', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'employees',
                'unique_together': {('employeeNumber', 'lastName', 'firstName')},
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customerNumber', models.IntegerField(primary_key=True, serialize=False)),
                ('customerName', models.CharField(max_length=50)),
                ('contactLastName', models.CharField(max_length=50)),
                ('contactFirstName', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=50)),
                ('addressLine1', models.CharField(max_length=50)),
                ('addressLine2', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('postalCode', models.CharField(blank=True, max_length=15, null=True)),
                ('country', models.CharField(max_length=50)),
                ('salesRepEmployeeNumber', models.IntegerField(blank=True, null=True)),
                ('creditLimit', models.FloatField()),
            ],
            options={
                'db_table': 'customers',
                'unique_together': {('customerNumber', 'customerName', 'contactLastName')},
            },
        ),
    ]
